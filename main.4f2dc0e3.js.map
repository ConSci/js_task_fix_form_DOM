{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","input","inputName","name","replace","letter","parentElement","insertAdjacentHTML","id","toUpperCase","placeholder","slice"],"mappings":";AAAA,aAgBC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAbD,IAaC,EAbKA,EAASC,SAASC,iBAAiB,SAErBF,EAAAA,EAAAA,GAWnB,IAX2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBG,IAAAA,EAAiB,EAAA,MACpBC,EAAYD,EAAME,KAAKC,QAAQ,SAAU,SAACC,GAAeA,MAAAA,IAAAA,OAAAA,KAE/DJ,EAAMK,cAAcC,mBAClB,aACmCN,mCAAAA,OAAAA,EAAMO,GACvCN,YAAAA,OAAAA,EAAUO,cAHd,mBAOAR,EAAMS,YAAcR,EAAU,GAAGO,cAAgBP,EAAUS,MAAM,IAClE,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.4f2dc0e3.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\nconst inputs = document.querySelectorAll('input');\n\nfor (const input of inputs) {\n  const inputName = input.name.replace(/[A-Z]/g, (letter) => ` ${letter}`);\n\n  input.parentElement.insertAdjacentHTML(\n    'afterbegin',\n    `<label class=\"field-label\" for=\"${input.id}\">\n    ${inputName.toUpperCase()}\n    </label>`\n  );\n\n  input.placeholder = inputName[0].toUpperCase() + inputName.slice(1);\n}\n"]}